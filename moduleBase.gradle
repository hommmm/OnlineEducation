import buildsrc.*

if (BuildConfig.isAppMode){
    apply plugin: 'com.android.application'
}else {
    apply plugin: 'com.android.library'
}

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'


android {
    compileSdkVersion BuildConfig.compileSdkVersion
    buildToolsVersion BuildConfig.buildToolsVersion

    defaultConfig {
        minSdkVersion BuildConfig.minSdkVersion
        targetSdkVersion BuildConfig.targetSdkVersion
        versionCode BuildConfig.versionCode
        versionName BuildConfig.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled true
    }

    //根据不同的模式加载不同的AndroidManifest文件
    sourceSets {
        main {
            if (BuildConfig.isAppMode) {
                manifest.srcFile 'src/main/java/debug/AndroidManifest.xml'
            } else {
                manifest.srcFile 'src/main/AndroidManifest.xml'
                java {
                    //排除debug文件夹下的所有文件
                    exclude 'debug/**'
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
}

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation 'junit:junit:4.+'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'androidx.navigation:navigation-ui:2.3.2'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.2'
    implementation 'androidx.navigation:navigation-fragment:2.3.2'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.2'

    //implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'


    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    //region jetPack libs
    implementation 'androidx.lifecycle:lifecycle-exensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-runtime:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0'
    kapt 'androidx.lifecycle:lifecycle-common-java8:2.2.0'

    implementation 'androidx.room:room-runtime:2.2.6'
    implementation 'androidx.room:room-common:2.2.6'
    implementation 'androidx.room:room-ktx:2.2.6'
    kapt "androidx.room:room-compiler:2.2.6"

    implementation 'androidx.paging:paging-runtime:2.1.2'
    implementation 'androidx.paging:paging-runtime-ktx:2.1.2'
    implementation 'androidx.paging:paging-common:2.1.2'
    implementation 'androidx.paging:paging-common-ktx:2.1.2'

    implementation 'androidx.work:work-runtime:2.4.0'
    implementation 'androidx.work:work-runtime-ktx:2.4.0'
}